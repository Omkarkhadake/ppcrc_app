This File Contain Report code Only Chart and Columns


import frappe
from frappe import _, msgprint

def execute(filters=None):
    if not filters:
        filters = {}
    if filters.get('date_of_publication'):
        start_date = filters['date_of_publication'][0]
        end_date = filters['date_of_publication'][1]
        filters['date_of_publication'] = ["between", (start_date, end_date)]
    
    data, columns = [], []
    
    columns = get_columns()
    cs_data = get_cs_data(filters)
    
    if not cs_data:
        msgprint(_('No Records Found'))
        return columns, cs_data, None, None, None
    
    data = []
    for d in cs_data:
        row = frappe._dict({
            'publication': d.publication,
            'academic_year': d.academic_year,
            'date_of_publication': d.date_of_publication,
            'program': d.program,
            'instructor': d.instructor,
            'employee_id': d.employee_id,
            'title': d.title,
            'name_of_journal': d.name_of_journal,
            'name_of_the_conference': d.name_of_the_conference,
            'financial_year': d.financial_year,
            'place_of_publication': d.place_of_publication,
            'national_international': d.national_international,
            'affiliation': d.affiliation,
            'publisher': d.publisher,
            'is_ugc_care_listed_': d.is_ugc_care_listed_,
            'proof': d.proof,
            'page_numbers': d.page_numbers,
            'citation': d.citation,
            'volume': d.volume,
            'status': d.status,
            'impact_factor': d.impact_factor,
            'iisn_isbn': d.iisn_isbn,
            'linkdoi': d.linkdoi,
            'indexed': d.indexed,
            'attachment': d.attachment   
        })
        data.append(row)
    
    chart =  get_chart_data(data)
        
    return columns, data, None,chart

def get_columns():
    return [
        {
            "fieldname": "publication",
            "label": _("Publication"),
            "fieldtype": "Link",
            "options": "Publication Type",
            'width': '120'
        },
        {
            "fieldname": "program",
            "label": _("Program"),
            "fieldtype": "Link",
            "options": "Program",
            'width': '170'
        },
        {
            "fieldname": "instructor",
            "label": _("Name of Authors"),
            "fieldtype": "Link",
            "options": "Instructor",
            'width': '170'
        },
        {
            "fieldname": "employee_id",
            "label": _("Employee ID"),
            "fieldtype": "Data",
            'width': '170'
        },
        {
            "fieldname": "academic_year",
            "label": _("Academic Year"),
            "fieldtype": "Link",
            "options": "Academic Year",
            'width': '120'
        },
        {
            "fieldname": "date_of_publication",
            "label": _("Date of Publication"),
            "fieldtype": "Date",
            'width': '120'
        },
        {
            "fieldname": "title",
            "label": _("Title"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "name_of_journal",
            "label": _("Name of Journal"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "name_of_the_conference",
            "label": _("Name of Conference"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "financial_year",
            "label": _("Financial Year"),
            "fieldtype": "Link",
            "options": "Fiscal Year",
            'width': '120'
        },
        {
            "fieldname": "place_of_publication",
            "label": _("Place of Publication"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "national_international",
            "label": _("Type"),
            "fieldtype": "Select",
            'width': '120'
        },
        {
            "fieldname": "affiliation",
            "label": _("Affiliation"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "publisher",
            "label": _("Publisher"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "is_ugc_care_listed_",
            "label": _("UGC Care Listed"),
            "fieldtype": "Select",
            'width': '120'
        },
        {
            "fieldname": "proof",
            "label": _("Proof"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "page_numbers",
            "label": _("Page Numbers"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "citation",
            "label": _("Citation"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "volume",
            "label": _("Volume"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "status",
            "label": _("Status"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "impact_factor",
            "label": _("Impact Factor"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "iisn_isbn",
            "label": _("IISN/ISBN"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "linkdoi",
            "label": _("DOI Link"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "indexed",
            "label": _("Indexed"),
            "fieldtype": "Data",
            'width': '120'
        },
        {
            "fieldname": "attachment",
            "label": _("Attachment"),
            "fieldtype": "Data",
            'width': '120'
        }
    ]

def get_cs_data(filters):
    conditions = get_conditions(filters)
    data = frappe.get_all(
        doctype='Publication',
        fields=[
            'publication', 'program', 'instructor', 'academic_year', 'date_of_publication', 'employee_id', 
            'title', 'name_of_journal', 'name_of_the_conference', 'financial_year', 'place_of_publication', 
            'national_international', 'affiliation', 'publisher', 'is_ugc_care_listed_', 'proof', 'page_numbers', 
            'citation', 'volume', 'status', 'impact_factor', 'iisn_isbn', 'linkdoi', 'indexed', 'attachment'
        ],
        filters=conditions
    )
    return data

def get_conditions(filters):
    conditions = {}
    for key, value in filters.items():
        if filters.get(key):
            conditions[key] = value
    return conditions





def get_chart_data(data):
    if not data:
        return None

    labels = set(entry.program for entry in data)
    sub_labels = set(entry.publication for entry in data)

    data_dict = {label: {sub_label: 0 for sub_label in sub_labels} for label in labels}

    for entry in data:
        if entry.status == "Approved" or entry.status == "Rejected" or entry.status == "Draft" or entry.status == "Pending":
            program = entry.program
            publication = entry.publication
            data_dict[program][publication] += 1

    datasets = []

    for sub_label in sub_labels:
        dataset = {
            'name': sub_label,
            'values': [],
        }
        for label in labels:
            dataset['values'].append(data_dict[label][sub_label])
        datasets.append(dataset)

    chart = {
        'data': {
            'labels': list(labels),
            'datasets': datasets
        },
        'type': 'bar',
        'height': 10,
        'width': 10,
    }
    return chart
