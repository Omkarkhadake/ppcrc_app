frappe.ui.form.on("DMS", {
    onload: function(frm) {
        if (frm.is_new()) {
            // Set the document creation date to today's date
            frm.set_value('document_creation_date', frappe.datetime.nowdate());

            // Fetch the user's email ID and employee ID
            frappe.call({
                method: "ppcrc_app.document_management.doctype.dms.dms.get_user_mail_id",
                args: {
                    user: frappe.session.user
                },
                callback: function(response) {
                    if (response.message) {
                        const { email, employee_id, employee_name, designation } = response.message;
                        console.log("Email ID:", email);
                        console.log("Employee ID:", employee_id);
                        console.log("Employee Name:", employee_name);
                        console.log("Employee designation:", designation);

                        frm.set_value('employee', employee_id);
                        frm.set_value('email_id', email);
                        frm.set_value('employee_name', employee_name);
                        frm.set_value('designation', designation);
                    } else {
                        console.log("Email ID not found or error occurred.");
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error fetching user's email ID:", error);
                }
            });
        }

        // // Disable delete button for 'document_version_list' table for non-System Managers
        if (!frappe.user.has_role('System Manager')) {
            frm.fields_dict['document_version_list'].grid.wrapper.find('.grid-remove-rows').hide();
        }

        // Add Approve and Reject buttons for approving authority if status is 'Pending'
        if (frm.doc.status ==='Pending' && frappe.session.user === frm.doc.approving_authority_id) {
            frm.add_custom_button(__('Approve'), function() {
                frm.call('approve').then(() => {
                    frm.reload_doc();
                    frm.save();
                });
            }, __("Action"));

            frm.add_custom_button(__('Reject'), function() {
                frm.call('reject').then(() => {
                    frm.reload_doc();
                    frm.save();
                });
            }, __("Action"));
        }
        console.log("frm.doc.approving_authority_id",frm.doc.approving_authority_id)
        console.log("frappe.session.user",frappe.session.user)

        // Show "Request for this document" button only when document status is Submitted and Approved
        if (frm.doc.docstatus === 1 && frm.doc.status === "Approved") {
            frm.add_custom_button(__("Request for this document"), function() {
                const documentId = frm.doc.name;

                if (documentId) {
                    // Call server-side method to fetch document details
                    frappe.call({
                        method: "ppcrc_app.document_management.doctype.dms.dms.get_document_details",
                        args: { doc_id: documentId },
                        callback: function(response) {
                            if (response.message) {
                                const { document_name, document_number, custodian_of_original_document, custodian_email } = response.message;
                                console.log("Document Details:", response.message);

                                // Create a new "Movement of Original Document" and set values
                                frappe.model.with_doctype('Movement of Original Document', function() {
                                    var doc = frappe.model.get_new_doc('Movement of Original Document');
                                    doc.document_name = document_name;
                                    doc.document_number = document_number;
                                    doc.default_custodian = custodian_of_original_document;
                                    doc.default_custodian_email = custodian_email;
                                    // Set other fields as needed
                                    frappe.set_route("Form", "Movement of Original Document", doc.name);
                                });
                            } else {
                                frappe.msgprint("Document not found or error occurred.");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error fetching document details:", error);
                            frappe.msgprint("Error fetching document details. Please try again.");
                        }
                    });

                    // Fetch user's email ID and employee ID
                    frappe.call({
                        method: "ppcrc_app.document_management.doctype.dms.dms.get_user_mail_id",
                        args: { user: frappe.session.user },
                        callback: function(response) {
                            if (response.message) {
                                console.log("Email ID:", response.message.email);
                                console.log("Employee ID:", response.message.employee_id);
                            } else {
                                console.log("Email ID not found or error occurred.");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error fetching user's email ID:", error);
                        }
                    });
                } else {
                    frappe.msgprint("Document ID is empty.");
                }
            });
        }
    },

    on_submit: function(frm) {
        frm.set_value('status', 'Pending');
        frm.save_or_update();
    }
});